====== Sending and displaying of camera images ======

This is a demo which streams the local camera device via RSB and displays it with another process.
It only consists of two applications.
One for opening the camera device, compressing the image and sending it via RSB.
And another which grabs the compressed images from the RSB scope and display them via OpenCV

<latex>

\textcolor{white}{text}

\tikzstyle{int}=[draw, fill=blue!20, minimum size=2em]
\tikzstyle{init} = [pin edge={to-,thin,black}]

\begin{tikzpicture}[node distance=4cm,auto,>=latex']
    \node [int] (a) {senseCamJpg};
    \node [int] (b) [below of=a] {showCamJpg};
    \path[->] (a) edge node { } (b);
\end{tikzpicture}
\textcolor{white}{text}
</latex>

===== Similar program pairs =====

This demo can also be run by programs, which do not compress/decompress the images, but sending the raw OpenCV Mat container over the RSB scopes:

  - [[sense:senseCamV4l:start|senseCamV4l]] --> [[tools:hmi:showCam:start|showCam]]
  - [[sense:senseCamV4l:start|senseCam]] --> [[tools:hmi:showCam:start|showCam]]

===== Run the demo =====

  - ''cmake .''
  - ''make''
  - ''./run.sh'' for running the demo
  - Hit any key to safely close the camera device
  - ''./stop.sh'' for stopping the rest of the demo

One could use ''rsb-loggercpp0.11 / --style monitor'' to inspect the communication and framerate.