#!/bin/bash

# common parameters


function component {
    MODULE="${BIRON_icewingDir}/icewing"
    DIR="${prefix}/lib/iceWing"
    DC_CONTROL_OPTIONS="-rc ${VDEMO_demoRoot}/data/icewing/settingsObjectDetectionKinect"
    CLASSES=""
    for ARG in `cat ${prefix}/share/objectModels/coldClasses.txt`
    do
        CLASSES="${prefix}/share/objectModels/$ARG.png;$CLASSES"
    done
        ${MODULE} ${DC_CONTROL_OPTIONS} \
        -l ${DIR}/libXcfChainSwitch.so \
        -a XcfChainSwitch1 "-s OdcChainSwitchServer -f ${VDEMO_demoRoot}/data/chainSwitchConfigKinect5DOdc.xml" \
        -l ${DIR}/libXCFExport.so \
        -a XCFExport1 "-x odcObject -i export_bb_in" \
        -l ${DIR}/libXCFExport.so \
        -a XCFExport2 "-x odcObject3D -i CroppedXYZ" \
        -l ${DIR}/lib3DKinectGrab.so \
        -a 3DKinectGrab1 "--trigger KinectTrigger --rgb_resx 640 --rgb_resy 480 --rgb_fps 30" \
        -l ${DIR}/lib3DKinectConvert.so \
        -a 3DKinectConvert1 "-i KinectDistance -x" \
        -l ${DIR}/libRstImageGrab.so \
	    -a RstImageGrab1 "-t trigger_5d" \
        -l ${DIR}/lib3DPcaSegmentation.so \
        -a 3DPcaSegmentation1 "-i KinectXYZ -d ${VDEMO_demoRoot}/data/pca.cfg " \
        -l ${DIR}/libiw_cold_bbox.so \
        -a ColdInBBox1 "-m ${CLASSES} -i cold_in --transformation ${HOME}/transformationKinectDSLR"
        #-l ${DIR}/libPMKSVM.so \
        #-a PMKSVM1 "-d ${prefix}/share/objectModels -c ${prefix}/share/objectModels/101_clusters -i image -b pmk_bb_in --no-hypotheses"
}

function clean_component {
    true
}

function on_start {
    true
}

function on_check {
    true
}

function on_stop {
    true
}

source "$VDEMO_root/vdemo_standard_component_suffix.sh"
