====== rirReader ======

The rirReader (RingInfraRed-Reader) reads, generalizes and publishes proximity values. For each proximity sensor an obstacle and an edge value is published. These values are based on the obstacle model (ref!) and the edge model (ref!).

===== Building =====

This is a cmake project, so just type:
  - ''cmake .''
  - ''make''

===== Basic Functionality =====

The rirReader publishes proximity values based on the [[includes:sensorModels:startVCNL4020|obstacle and edge model]]. Due to big differences in the measurement behavior of the sensors, their measured values have to be generalized for the models. In this case simple offsets are used, which have to be calculated for each sensor before using the rirReader the first time.

The sensor values are read directly from the CAN. The rirReader only uses RSB for publishing the generalized values.

==== Sensor Offsets ====

The offsets are loaded from configuration files, which are written in csv format. Using the tab seperator ("\t") the files just list the offsets from first to last sensor. There is no head line!
''<offset sensor 1>\t<offset sensor 2>\t...\t<offset sensor 8>''

There are used two types of offsets for each sensor. The first offset is the ground offset, which is used to decide, if there could be an obstacle or an edge. The second one is the air offset, which is used for the edge distance approach. The configuration files have to be in the same directory as the rirReader executable and must have the following names:
  - ground offsets: ''irConfig.conf''
  - air offsets: ''irEmpty.conf''

The offsets are the mean values of a measurement set. For such a measurement the tool [[tools:measureOffsetTest:start|measureOffsetTest]] can be used. It has a parameter to calculate the mean values and to write those configuration files directly. This tool has to be used twice, for each offset type once:
For the measurement of the ground offset, the robot has to be placed on the ground, which should be used (table, floor, etc.). There shouldn't be any obstacles (including cables!) or edges in range of the sensors (for the VCNL4020 proximity sensors it's a range about 25 cm around the robot). For the measurement of the air offset, the robot should be placed in the air by using e.g. thin objects, etc. (for the VCNL4020 proximity sensors the height should be about 20 cm). Of course, there shouldn't be any obstacles in the sensors' range, either!

==== Published Sensor Values ====

There are published two values: the obstacle and the edge value. Given the sensor value s, the obstacle (o) and edge values (e) are calculated with the ground (g) and air offsets (a) as follows:
  * ''if (s >= g)''
    * ''o = s - g''
    * ''e = g - a''
  * ''else''
    * ''o = 0''
    * ''if (s > a)''
      * ''e = s - a''
    * ''else''
      * ''e = 0''
  * ''e = e / (g - a) * 10000''

Important is the difference between these two sensor values: The obstacle value as the real distance to the ground offset in sensor ticks. The edge value is a relative value between the ground and the air offset. The "measured" value in range [air offset, ground offset] will be normalized to [0,1]. Due to integer communication it is ranged up by 10000 (saving the next 4 decimal places).

The ground and edge values are published seperately via RSB. They can be used directly for the obstacle and the edge model without any additional generalization.

===== RSB Scopes =====

^ Name ^ Default Scope ^ Description ^
| Obstacle Scope | /rir_prox/obstacle | Scope for sending generalized proximity values for the obstacle model. |
| Edge Scope | /rir_prox/ground | Scope for sending generalized proximity values for the edge model. |

===== Parameters =====

^ Parameter ^ Type ^ Default Value ^ Description ^
| --outscopeObstacle, -o | String | ''/rir_prox/obstacle'' | Scope for sending generalized proximity values for the obstacle model. |
| --outscopeGround, -g | String | ''/rir_prox/ground'' | Scope for sending generalized proximity values for the edge model. |
| --period, -t | Integer | 0 | Update interval in milliseconds (0 for maximum rate). |
| --print, -p | - | - | Prints read proximity values in the console. |
| --loadOffsets, -l | - | - | Loads offsets from the files 'irConfig.conf' and 'irEmpty.conf'. |
