====== stateMachineGEPTRO ======

This is the basic state machine for the GEPTRO project. It is the main part of the GEPTRO project. Please use the [[demo:geptroOpenChallenge_all:start|GEPTRO demo]]. For testing and giving commands the [[process:answerer:start| answerer tool]] can be used.

===== States =====

^ State ^ Description ^ Transitions ^
| idle | Waits for init command | init: if init command has been received |
| init | Initializes the state machine. | explorationStart: directly |
| explorationStart | Sends exploration start command to exploration program. | exploration: directly |
| exploration | Waits for exploration finish notice and starts blob detection. | blobDetection: if exploration has been finished |
| blobDetection | Loads blobs from map program. | objectDetectionStart: directly |
| objectDetectionStart | Sends object detection start command to object detection program. | objectDetectionInit: directly |
| objectDetectionInit | Waits for object count of object detection. | objectDetectionMain: if object count has been finished |
| objectDetectionMain | Sends object recognitions of every detected object. | initDone: if all objects have been recognized |
| initDone | Sends initial finish notice. | waiting: directly |
| waiting | Waits for next command. | objectDeliveryStart: if object delivery command has been received; objectTransportStart: if object transport command has been received |
| objectDeliveryStart | Sends delivery start command to object delivery program. | objectDelivery: directly |
| objectDelivery | Sends start recognition and waits for delivery finish notice. | objectDeliveryFinish: if delivery has been finished |
| objectDeliveryFinish | Sends delivery finish notice and waits for recognition. | initDone: if delivery finish recognition has been received |
| objectTransportStart | Sends transport start command to object transport program. | objectTransport: directly |
| objectTransport | Sends start recognition and waits for transport finish notice. | objectTransportFinish: if transport has been finished |
| objectTransportFinish | Sends transport finish notice and waits for recognition. | initDone: if transport finish recognition has been received |

The state behaviors are descripted more in detail in the [[process:stateMachineGEPTRO:StateDescriptions|State Behavior Description]].

===== Application Parameters =====

^ Parameter ^ Type ^ Default Value ^ Description ^
| --spread, -s | String | "localhost" | IP of remote spread server. |
| --spreadPort, -p | String | "4823" | Port of remote spread server. |
| --outscopeTobi, -o | String | "/amiro" | Scope for sending the current state to tobi. |
| --outscopeState, -s | String | "/amiroState" | Scope for sending the current state internaly. |
| --inscopeTobi, -i | String | "/tobiamiro" | Scope for recieving Tobis messages. |
| --mapServerScope | String | "/mapGenerator" | Scope for map server. |
| --obstacleServerReq | String | "getObjectsList" | Function name of map server for obstacle map. |
| --sObjectDetRectOutscope | String | "/rectangledata" | Scope for sending rectangle data. |
| --robotID, -d | Integer | 0 | Robot ID. |
| --bigMap | - | - | Flag if the map is very big (the pathplanner needs more than 25 seconds). |
| --mapServerIsRemote | - | - | Flag, if the map server is a remote server (otherwise it uses local connection). |
| --testWithAnswerer | - | - | Prepares some constants for test with answerer. |
