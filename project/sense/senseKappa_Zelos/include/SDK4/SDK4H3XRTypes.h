#ifndef SDK4_H3XR_TYPES_H_
#define SDK4_H3XR_TYPES_H_

#include <SDK4/SDK4PlatformTypes.h>
	
#ifdef __cplusplus
extern "C" {
#endif
	

	enum H3XR_ENUM_OFFONSTOP_ID
	{
		H3XR_ENUM_OFF	= 0,
		H3XR_ENUM_ON	= 1, 
		H3XR_ENUM_STOP	= 2   // !! tbd !! 2 oder 3
	};

	enum H3XR_ENUM_EXPOSUREMODE_ID
	{
		H3XR_ENUM_EXPOSUREMODE_FREERUNNINGPARALLEL	= 1,
		H3XR_ENUM_EXPOSUREMODE_FRAMEONDEMAND		= 2,
		H3XR_ENUM_EXPOSUREMODE_ASYNCEXP				= 3,
		H3XR_ENUM_EXPOSUREMODE_TWIN					= 4
	};

	enum H3XR_ENUM_MFCOLOR_BW_ID
	{
		H3XR_ENUM_COLOR_GREY0	= 0,
		H3XR_ENUM_COLOR_GREY25  = 1,
		H3XR_ENUM_COLOR_GREY75  = 2,
		H3XR_ENUM_COLOR_GREY100 = 3
	};

	enum H3XR_ENUM_SHADINGSELECT_ID
	{
		H3XR_ENUM_VTILT = 0,
		H3XR_ENUM_HTILT = 1,
		H3XR_ENUM_VDOME = 2,
		H3XR_ENUM_HDOME = 3
	};	

	enum H3XR_ENUM_ABC_SELECT_ID
	{
		H3XR_ENUM_XRHIGH = 0,
		H3XR_ENUM_XRLOW = 1
	};	

	enum H3XR_ENUM_TESTPATTERN_ID
	{
		H3XR_ENUM_IMAGEDATA = 0,
		H3XR_ENUM_GRAYSCALE = 1,
		H3XR_ENUM_GRAYSCALEMARGIN = 2,
		H3XR_ENUM_TRIANGLE4 = 3,
		H3XR_ENUM_CONSUMER = 4,
		H3XR_ENUM_RESOLUTION = 5,
		H3XR_ENUM_GRAYRAMP = 6
	};

	enum H3XR_ENUM_PATTERNGENERATOR_SELECT_ID
	{
		H3XR_ENUM_PATTERNGENERATOR_PREPROCESSING = 0,
		H3XR_ENUM_PATTERNGENERATOR_POSTPROCESSING = 1
	};

	enum H3XR_ENUM_DEFPIXELCOMPENSATION_ID
	{
		H3XR_ENUM_DEFPIXELCOMP_OFF = 0,
		H3XR_ENUM_DEFPIXELCOMP_ON = 1,
		H3XR_ENUM_DEFPIXELCOMP_HIGHLIGHT = 2
	};

/// <summary> 
/// SDK4 enumeration for Overlay Selection
/// </summary>
	enum H3XR_ENUM_OVERLAYSELECT_ID
	{
		H3XR_ENUM_OVERLAYSELECT_LINEGENERATOR1			= 0,
		H3XR_ENUM_OVERLAYSELECT_LINRGENERATOR2			= 1
	};

	/// SDK4 enumeration for MotorControl Select (Iris, Filter) of LumaCam G
	enum H3XR_ENUM_MOTORSELECT_ID
	{
		H3XR_ENUM_IRISMOTOR		= 0,
		H3XR_ENUM_FILTERMOTOR	= 1
	};

	/// SDK4 enumeration for MotorControl addresses of LumaCam G
	enum H3XR_ENUM_MOTORCONTROL_ADDR_ID
	{
		H3XR_ENUM_GOTOPOS			= 0x02,
		H3XR_ENUM_HOMELEFT			= 0x04,
		H3XR_ENUM_HOMERIGHT			= 0x06,
		H3XR_ENUM_STORERIGHT		= 0x08,
		H3XR_ENUM_STORELEFT			= 0x0A,
		H3XR_ENUM_SETLEFT			= 0x0C,
		H3XR_ENUM_SETRIGHT			= 0x0E,
		H3XR_ENUM_GETLEFT			= 0x10,
		H3XR_ENUM_GETRIGHT			= 0x12,
		H3XR_ENUM_GETACTPOS			= 0x14,
		H3XR_ENUM_GETVERSION		= 0x16,
		H3XR_ENUM_GETSTATUS			= 0x18,
		H3XR_ENUM_STARTCALIBRATION	= 0x20,
		H3XR_ENUM_FILTERON			= 0x22,
		H3XR_ENUM_FILTEROFF			= 0x24,
		H3XR_ENUM_IRISCORR			= 0x28,
		H3XR_ENUM_RAMPCONFIG		= 0x2A
	};

/// <summary> 
	/// SDK4 enumeration for HistogramEqualization Modes (Hires)
/// </summary>
	enum SDK4_ENUM_HISTOEQUAL_ID 
	{
		SDK4_ENUM_HISTOEQUAL_OFF		= 0,
		SDK4_ENUM_HISTOEQUAL_AUTO		= 1,
		SDK4_ENUM_HISTOEQUAL_PUSH		= 2,
		SDK4_ENUM_HISTOEQUAL_STOP		= 3
	};

#ifdef __cplusplus
}
#endif

#endif